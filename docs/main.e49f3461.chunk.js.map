{"version":3,"sources":["components/Grid.tsx","consts.ts","components/DropDown.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["buttonPressTimer","Candies","_id","name","price","unit","DropDown","selected","onChange","className","e","target","value","map","c","key","defaultValue","GridRow","props","candy","count","sum","calcSum","Number","toFixed","cand","find","type","countChange","priceChange","Grid","savedCandies","localStorage","getItem","parsedCandies","JSON","parse","console","warn","forEach","cnd","push","getTotalSum","_totalSum","candies","useState","setCandies","totalSum","setTotalSum","saveCandies","setItem","stringify","handleButtonPress","index","setTimeout","splice","handleButtonRelease","clearTimeout","uuid","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","changeCandy","onClick","window","confirm","removeItem","resuslt","priceCount","navigator","clipboard","writeText","then","log","copyToBuffer","Date","now","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"main.e49f3461.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport DropDown from './DropDown';\r\nimport {ICandyItem} from \"../types\";\r\nimport {Candies} from \"../consts\";\r\nimport './grid.scss';\r\n\r\nlet buttonPressTimer: any;\r\nconst Grid = () => {\r\n    let savedCandies = localStorage.getItem('candies');\r\n    let cand: ICandyItem[] = [];\r\n    if (savedCandies) {\r\n        try {\r\n            let parsedCandies: Array<ICandyItem> = JSON.parse(savedCandies) || [];\r\n            console.warn(parsedCandies);\r\n            parsedCandies.forEach((cnd: ICandyItem) => {\r\n                cand.push(cnd);\r\n            });\r\n        } catch (e) {\r\n            cand = [];\r\n            console.warn(e);\r\n        }\r\n    }\r\n\r\n    let getTotalSum = ()=> {\r\n        let _totalSum = 0;\r\n        candies.forEach((c) => {\r\n            _totalSum += c.sum;\r\n        });\r\n        return _totalSum;\r\n    }\r\n    let [candies, setCandies] = useState(cand);\r\n    let [totalSum, setTotalSum] = useState(getTotalSum());\r\n\r\n    let AddRow = () => {\r\n        cand = candies;\r\n\r\n        cand.push({\r\n            ...Candies[0],\r\n            count: 0,\r\n            sum: 0,\r\n            uuid: Date.now()\r\n        });\r\n        setCandies([...cand]);\r\n        saveCandies();\r\n    };\r\n\r\n    let changeCandy = (candy: ICandyItem) => {\r\n        cand = candies;\r\n        let totalSum = 0;\r\n\r\n        cand.forEach((c, index) => {\r\n            if (c.uuid === candy.uuid) {\r\n                cand[index] = {\r\n                    ...candy\r\n                };\r\n            }\r\n            totalSum += cand[index].sum;\r\n        });\r\n        console.warn(totalSum)\r\n        setTotalSum(totalSum);\r\n        setCandies([...cand]);\r\n        saveCandies();\r\n    };\r\n\r\n    let calcTotalSum = () => {\r\n        setTotalSum(getTotalSum());\r\n    };\r\n\r\n\r\n    let copyToBuffer = () => {\r\n        let resuslt = \"\";\r\n\r\n        candies.forEach(c => {\r\n            if (c.count > 0) {\r\n                let priceCount = \"\";\r\n                if (c.unit) {\r\n                    priceCount = `${c.count}${c.unit} x ${c.price}грн = `;\r\n                }\r\n\r\n                resuslt += `${c.name} ${priceCount}${c.sum} грн \\n`\r\n            }\r\n        });\r\n        resuslt += `Загальна сума ${totalSum} грн`;\r\n\r\n        navigator.clipboard.writeText(resuslt).then(function () {\r\n            console.log('copied')\r\n        }, function () {\r\n            console.log('failed to copy')\r\n        });\r\n    };\r\n\r\n    let removeAll = () => {\r\n        if (window.confirm(\"Видалити все?\")) {\r\n            setCandies([]);\r\n            localStorage.removeItem('candies')\r\n        }\r\n    };\r\n\r\n    let saveCandies = () => {\r\n        console.warn('m555');\r\n        localStorage.setItem('candies', JSON.stringify(candies));\r\n    };\r\n\r\n    let handleButtonPress = (index: number) => {\r\n        buttonPressTimer = setTimeout(() => {\r\n            let cand = candies;\r\n            cand.splice(index, 1);\r\n            setCandies([...cand]);\r\n            calcTotalSum();\r\n        }, 1500);\r\n    };\r\n\r\n    let handleButtonRelease = () => {\r\n        clearTimeout(buttonPressTimer);\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n            <div className=\"grid-body\">\r\n                {\r\n                    candies.map((c, index) => {\r\n                        return <div key={c.uuid}\r\n                                    onTouchStart={() => handleButtonPress(index)}\r\n                                    onTouchEnd={handleButtonRelease}\r\n                                    onMouseDown={() => handleButtonPress(index)}\r\n                                    onMouseUp={handleButtonRelease}\r\n                                    onMouseLeave={handleButtonRelease}>\r\n                            <GridRow\r\n                                candy={c}\r\n                                onChange={(c: ICandyItem) => changeCandy(c)}\r\n                            />\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"total-row\">\r\n                Загальна вартість: {totalSum} грн\r\n            </div>\r\n            <div className=\"action-bar\">\r\n                <button className=\"remove-button\" onClick={() => removeAll()}>X</button>\r\n                <button className=\"clipboard-button\" onClick={() => copyToBuffer()}>C</button>\r\n                <button className=\"add-row-button\" onClick={() => AddRow()}>+</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst GridRow = (props: any) => {\r\n    let candy: ICandyItem = props.candy;\r\n\r\n    let {_id, price, count, sum} = candy;\r\n\r\n    let onCandyChanged = (_id: string) => {\r\n        let cand = Candies.find(candy => candy._id === _id);\r\n        if (cand) {\r\n            candy = {\r\n                ...candy,\r\n                _id: cand._id,\r\n                price: cand.price,\r\n                name: cand.name,\r\n                unit: cand.unit\r\n            }\r\n        }\r\n        if (candy) {\r\n            _id = candy._id;\r\n            price = candy.price;\r\n            calcSum();\r\n        }\r\n        ;\r\n    };\r\n    let calcSum = () => {\r\n        sum = (Number((count * price).toFixed(2)));\r\n        props.onChange({\r\n            ...candy,\r\n            count,\r\n            sum,\r\n            price\r\n        });\r\n    };\r\n\r\n    let countChange = (e: any) => {\r\n        count = (Number(e.target.value));\r\n        calcSum();\r\n    };\r\n\r\n    let priceChange = (e: any) => {\r\n        price = (Number(e.target.value));\r\n        calcSum();\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid-row\">\r\n            <div className=\"product\">\r\n                <DropDown selected={_id} onChange={onCandyChanged}/>\r\n            </div>\r\n            <div className=\"count\">\r\n                <input type=\"number\" value={count || \"\"} onChange={(e) => countChange(e)}/>\r\n            </div>\r\n            <div className=\"price\">\r\n                <input type=\"number\" value={price || \"\"} onChange={(e) => priceChange(e)}/>\r\n            </div>\r\n            <div className=\"sum\">\r\n                {sum}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Grid;","import {ICandy} from \"./types\";\r\n\r\nexport const Candies : ICandy[] =[\r\n    {\r\n        _id: \"1\",\r\n        name: 'Кейкпопси',\r\n        price: 18,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        name: 'Мусове тістечко (фруктове)',\r\n        price: 27,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        name: 'Мусове тістечко (чорнослив)',\r\n        price: 27,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"4\",\r\n        name: 'Капкейки',\r\n        price: 30,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"5\",\r\n        name: 'Тірамісу ',\r\n        price: 24,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"6\",\r\n        name: 'Тарта фруктова',\r\n        price: 26,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"7\",\r\n        name: 'Тарта з шоколадним ганашем',\r\n        price: 26,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"8\",\r\n        name: 'Паннакотта',\r\n        price: 22,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"9\",\r\n        name: 'Макаронси',\r\n        price: 18,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"10\",\r\n        name: 'Макаронси преміум',\r\n        price: 28,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"11\",\r\n        name: 'Вершковий десерт',\r\n        price: 22,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"12\",\r\n        name: 'Міні-чізкейк (min)',\r\n        price: 24,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"13\",\r\n        name: 'Міні-чізкейк (max)',\r\n        price: 30,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"14\",\r\n        name: 'Листкове тістечко (лимонне)',\r\n        price: 22,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"15\",\r\n        name: 'Листкове тістечко (лайм)',\r\n        price: 22,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"16\",\r\n        name: 'Десерт Орео',\r\n        price: 26,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"17\",\r\n        name: 'Мусове серце (min)',\r\n        price: 26,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"18\",\r\n        name: 'Мусове серце (max)',\r\n        price: 37,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"19\",\r\n        name: 'Лимонний мус',\r\n        price: 24,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"20\",\r\n        name: 'Лаймовий мус',\r\n        price: 24,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"21\",\r\n        name: 'Шоколадний мус',\r\n        price: 24,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"27\",\r\n        name: 'Фруктовий мус',\r\n        price: 24,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"23\",\r\n        name: 'Павлова',\r\n        price: 25,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"28\",\r\n        name: 'Снікерс',\r\n        price: 23,\r\n        unit: \"шт\"\r\n    },\r\n    {\r\n        _id: \"24\",\r\n        name: 'Торт',\r\n        price: 500,\r\n        unit: \"кг\"\r\n    },\r\n    {\r\n        _id: \"25\",\r\n        name: \"Оренда посуду + викладка\",\r\n        price: 500,\r\n        unit: \"\"\r\n    },\r\n    {\r\n        _id: \"26\",\r\n        name: \"Доставка\",\r\n        price: 300,\r\n        unit: \"\"\r\n    }\r\n\r\n];","import {ICandy} from '../types';\r\nimport {Candies} from '../consts';\r\nimport React from 'react';\r\nimport './dropdown.scss'\r\nconst DropDown = ({ selected, onChange}: { selected: string, onChange: any}) => {\r\n    return (\r\n       <select className=\"drop-down\" onChange={(e)=> onChange(e.target.value)}>\r\n           {Candies.map((c: ICandy) =>{\r\n              if (c._id === selected) {\r\n                  return  <option key={c._id} value={c._id} selected={true} defaultValue={selected}>{c.name}</option>\r\n              } else {\r\n                  return <option key={c._id} value={c._id}>{c.name}</option>\r\n              }\r\n           })};\r\n       </select>\r\n    );\r\n};\r\n\r\nexport default DropDown;","import React from 'react';\nimport './App.scss';\nimport Grid from \"./components/Grid\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Grid/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/candy_calc/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          registerValidSW(swUrl)\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\nregister();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}