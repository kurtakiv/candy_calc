{"version":3,"sources":["components/Grid.tsx","consts.ts","components/DropDown.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["buttonPressTimer","Candies","_id","name","price","unit","DropDown","selected","onChange","className","e","target","value","map","c","key","defaultValue","GridRow","props","candy","count","sum","calcSum","Number","toFixed","cand","find","type","countChange","priceChange","Grid","savedCandies","localStorage","getItem","parsedCandies","JSON","parse","console","warn","forEach","cnd","push","getTotalSum","_totalSum","candies","useState","setCandies","totalSum","setTotalSum","saveCandies","setItem","stringify","handleButtonPress","index","setTimeout","splice","handleButtonRelease","clearTimeout","uuid","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","changeCandy","onClick","window","confirm","removeItem","resuslt","priceCount","navigator","clipboard","writeText","then","log","copyToBuffer","Date","now","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"main.b0fb9d29.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport DropDown from './DropDown';\nimport {ICandyItem} from \"../types\";\nimport {Candies} from \"../consts\";\nimport './grid.scss';\n\nlet buttonPressTimer: any;\nconst Grid = () => {\n    let savedCandies = localStorage.getItem('candies');\n    let cand: ICandyItem[] = [];\n    if (savedCandies) {\n        try {\n            let parsedCandies: Array<ICandyItem> = JSON.parse(savedCandies) || [];\n            console.warn(parsedCandies);\n            parsedCandies.forEach((cnd: ICandyItem) => {\n                cand.push(cnd);\n            });\n        } catch (e) {\n            cand = [];\n            console.warn(e);\n        }\n    }\n\n    let getTotalSum = ()=> {\n        let _totalSum = 0;\n        candies.forEach((c) => {\n            _totalSum += c.sum;\n        });\n        return _totalSum;\n    }\n    let [candies, setCandies] = useState(cand);\n    let [totalSum, setTotalSum] = useState(getTotalSum());\n\n    let AddRow = () => {\n        cand = candies;\n\n        cand.push({\n            ...Candies[0],\n            count: 0,\n            sum: 0,\n            uuid: Date.now()\n        });\n        setCandies([...cand]);\n        saveCandies();\n    };\n\n    let changeCandy = (candy: ICandyItem) => {\n        cand = candies;\n        let totalSum = 0;\n\n        cand.forEach((c, index) => {\n            if (c.uuid === candy.uuid) {\n                cand[index] = {\n                    ...candy\n                };\n            }\n            totalSum += cand[index].sum;\n        });\n        console.warn(totalSum)\n        setTotalSum(totalSum);\n        setCandies([...cand]);\n        saveCandies();\n    };\n\n    let calcTotalSum = () => {\n        setTotalSum(getTotalSum());\n    };\n\n\n    let copyToBuffer = () => {\n        let resuslt = \"\";\n\n        candies.forEach(c => {\n            if (c.count > 0) {\n                let priceCount = \"\";\n                if (c.unit) {\n                    priceCount = `${c.count}${c.unit} x ${c.price}грн = `;\n                }\n\n                resuslt += `${c.name} ${priceCount}${c.sum} грн \\n`\n            }\n        });\n        resuslt += `Загальна сума ${totalSum} грн`;\n\n        navigator.clipboard.writeText(resuslt).then(function () {\n            console.log('copied')\n        }, function () {\n            console.log('failed to copy')\n        });\n    };\n\n    let removeAll = () => {\n        if (window.confirm(\"Видалити все?\")) {\n            setCandies([]);\n            localStorage.removeItem('candies')\n        }\n    };\n\n    let saveCandies = () => {\n        localStorage.setItem('candies', JSON.stringify(candies));\n    };\n\n    let handleButtonPress = (index: number) => {\n        buttonPressTimer = setTimeout(() => {\n            let cand = candies;\n            cand.splice(index, 1);\n            setCandies([...cand]);\n            saveCandies();\n            calcTotalSum();\n        }, 1500);\n    };\n\n    let handleButtonRelease = () => {\n        clearTimeout(buttonPressTimer);\n    };\n\n    return (\n        <div className=\"grid\">\n            <div className=\"grid-body\">\n                {\n                    candies.map((c, index) => {\n                        return <div key={c.uuid}\n                                    onTouchStart={() => handleButtonPress(index)}\n                                    onTouchEnd={handleButtonRelease}\n                                    onMouseDown={() => handleButtonPress(index)}\n                                    onMouseUp={handleButtonRelease}\n                                    onMouseLeave={handleButtonRelease}>\n                            <GridRow\n                                candy={c}\n                                onChange={(c: ICandyItem) => changeCandy(c)}\n                            />\n                        </div>\n                    })\n                }\n            </div>\n            <div className=\"total-row\">\n                Загальна вартість: {totalSum} грн\n            </div>\n            <div className=\"action-bar\">\n                <button className=\"remove-button\" onClick={() => removeAll()}>X</button>\n                <button className=\"clipboard-button\" onClick={() => copyToBuffer()}>C</button>\n                <button className=\"add-row-button\" onClick={() => AddRow()}>+</button>\n            </div>\n        </div>\n\n    );\n};\n\nconst GridRow = (props: any) => {\n    let candy: ICandyItem = props.candy;\n\n    let {_id, price, count, sum} = candy;\n\n    let onCandyChanged = (_id: string) => {\n        let cand = Candies.find(candy => candy._id === _id);\n        if (cand) {\n            candy = {\n                ...candy,\n                _id: cand._id,\n                price: cand.price,\n                name: cand.name,\n                unit: cand.unit\n            }\n        }\n        if (candy) {\n            _id = candy._id;\n            price = candy.price;\n            calcSum();\n        }\n        ;\n    };\n    let calcSum = () => {\n        sum = (Number((count * price).toFixed(2)));\n        props.onChange({\n            ...candy,\n            count,\n            sum,\n            price\n        });\n    };\n\n    let countChange = (e: any) => {\n        count = (Number(e.target.value));\n        calcSum();\n    };\n\n    let priceChange = (e: any) => {\n        price = (Number(e.target.value));\n        calcSum();\n    };\n\n    return (\n        <div className=\"grid-row\">\n            <div className=\"product\">\n                <DropDown selected={_id} onChange={onCandyChanged}/>\n            </div>\n            <div className=\"count\">\n                <input type=\"number\" value={count || \"\"} onChange={(e) => countChange(e)}/>\n            </div>\n            <div className=\"price\">\n                <input type=\"number\" value={price || \"\"} onChange={(e) => priceChange(e)}/>\n            </div>\n            <div className=\"sum\">\n                {sum}\n            </div>\n        </div>\n    )\n};\n\n\nexport default Grid;","import {ICandy} from \"./types\";\n\nexport const Candies : ICandy[] =[\n    {\n        _id: \"1\",\n        name: 'Кейкпопси',\n        price: 18,\n        unit: \"шт\"\n    },\n    {\n        _id: \"2\",\n        name: 'Мусове тістечко (фруктове)',\n        price: 27,\n        unit: \"шт\"\n    },\n    {\n        _id: \"3\",\n        name: 'Мусове тістечко (чорнослив)',\n        price: 27,\n        unit: \"шт\"\n    },\n    {\n        _id: \"4\",\n        name: 'Капкейки',\n        price: 30,\n        unit: \"шт\"\n    },\n    {\n        _id: \"27\",\n        name: \"Міні-капкейки\",\n        price: 18,\n        unit: \"шт\"\n    },\n    {\n        _id: \"5\",\n        name: 'Тірамісу ',\n        price: 24,\n        unit: \"шт\"\n    },\n    {\n        _id: \"6\",\n        name: 'Тарта фруктова',\n        price: 26,\n        unit: \"шт\"\n    },\n    {\n        _id: \"7\",\n        name: 'Тарта з шоколадним ганашем',\n        price: 26,\n        unit: \"шт\"\n    },\n    {\n        _id: \"8\",\n        name: 'Паннакотта',\n        price: 22,\n        unit: \"шт\"\n    },\n    {\n        _id: \"9\",\n        name: 'Макаронси',\n        price: 18,\n        unit: \"шт\"\n    },\n    {\n        _id: \"10\",\n        name: 'Макаронси преміум',\n        price: 28,\n        unit: \"шт\"\n    },\n    {\n        _id: \"11\",\n        name: 'Вершковий десерт',\n        price: 22,\n        unit: \"шт\"\n    },\n    {\n        _id: \"12\",\n        name: 'Міні-чізкейк (min)',\n        price: 24,\n        unit: \"шт\"\n    },\n    {\n        _id: \"13\",\n        name: 'Міні-чізкейк (max)',\n        price: 30,\n        unit: \"шт\"\n    },\n    {\n        _id: \"14\",\n        name: 'Листкове тістечко (лимонне)',\n        price: 22,\n        unit: \"шт\"\n    },\n    {\n        _id: \"15\",\n        name: 'Листкове тістечко (лайм)',\n        price: 22,\n        unit: \"шт\"\n    },\n    {\n        _id: \"16\",\n        name: 'Десерт Орео',\n        price: 26,\n        unit: \"шт\"\n    },\n    {\n        _id: \"17\",\n        name: 'Мусове серце (min)',\n        price: 26,\n        unit: \"шт\"\n    },\n    {\n        _id: \"18\",\n        name: 'Мусове серце (max)',\n        price: 37,\n        unit: \"шт\"\n    },\n    {\n        _id: \"19\",\n        name: 'Лимонний мус',\n        price: 24,\n        unit: \"шт\"\n    },\n    {\n        _id: \"20\",\n        name: 'Лаймовий мус',\n        price: 24,\n        unit: \"шт\"\n    },\n    {\n        _id: \"21\",\n        name: 'Шоколадний мус',\n        price: 24,\n        unit: \"шт\"\n    },\n    {\n        _id: \"027\",\n        name: 'Фруктовий мус',\n        price: 24,\n        unit: \"шт\"\n    },\n    {\n        _id: \"23\",\n        name: 'Павлова',\n        price: 25,\n        unit: \"шт\"\n    },\n    {\n        _id: \"28\",\n        name: 'Снікерс',\n        price: 23,\n        unit: \"шт\"\n    },\n    {\n        _id: \"29\",\n        name: \"Солена карамель\",\n        price: 30,\n        unit: \"шт\"\n    },\n    {\n        _id: \"fistashka32\",\n        name: \"Фісташка\",\n        price: 32,\n        unit: \"шт\"\n    },\n    {\n        _id: \"mangoMarakuja\",\n        name: \"Манго-маракуя\",\n        price: 34,\n        unit: \"шт\"\n    },\n    {\n        _id: \"Laim26\",\n        name: \"Лайм\",\n        price: 26,\n        unit: \"шт\"\n    },\n    {\n        _id: \"marakyjaAnanas\",\n        name: \"Маракуя-ананас\",\n        price: 26,\n        unit: \"шт\"\n    },\n    {\n        _id: \"newYork\",\n        name: \"Чізкейк New York\",\n        price: 30,\n        unit: \"шт\"\n    },\n    {\n        _id: \"cloud\",\n        name: \"Хмаринка\",\n        price: 28,\n        unit: \"шт\"\n    },\n    {\n        _id: \"24\",\n        name: 'Торт',\n        price: 500,\n        unit: \"кг\"\n    },\n    {\n        _id: \"25\",\n        name: \"Оренда посуду + викладка\",\n        price: 500,\n        unit: \"\"\n    },\n    {\n        _id: \"26\",\n        name: \"Доставка\",\n        price: 300,\n        unit: \"\"\n    }\n\n\n];","import {ICandy} from '../types';\nimport {Candies} from '../consts';\nimport React from 'react';\nimport './dropdown.scss'\nconst DropDown = ({ selected, onChange}: { selected: string, onChange: any}) => {\n    return (\n       <select className=\"drop-down\" onChange={(e)=> onChange(e.target.value)}>\n           {Candies.map((c: ICandy) =>{\n              if (c._id === selected) {\n                  return  <option key={c._id} value={c._id} selected={true} defaultValue={selected}>{c.name}</option>\n              } else {\n                  return <option key={c._id} value={c._id}>{c.name}</option>\n              }\n           })};\n       </select>\n    );\n};\n\nexport default DropDown;","import React from 'react';\nimport './App.scss';\nimport Grid from \"./components/Grid\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Grid/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/candy_calc/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          registerValidSW(swUrl)\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\nregister();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}